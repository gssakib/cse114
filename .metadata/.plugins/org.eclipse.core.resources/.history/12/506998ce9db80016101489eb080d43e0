import java.util.ArrayList;

public class Homework8Methods {
	// part 1
		public static int findTimes10(int[] nums) {
			int lower = 0;
			
			return findTimes10Helper(nums, lower);
		}

		
		
		public static int findTimes10Helper(int[] nums, int lower){
			
			if(lower+1 == nums.length ){
				
				return -1;
			}else if(10*nums[lower] != nums[lower + 1] ){
				
				return findTimes10Helper(nums, lower + 1);
			}else{
				
				return (lower);
			}
		
		}
		
		
		
		// part 2
		public static void replaceMult5(int[] nums, int newVal) {
			int lower = 0;
			replaceMult5Helper(nums, newVal, lower);
			
		}

		public static void replaceMult5Helper(int[] nums, int newVal, int lower){
			if(nums[lower] % 5 == 0 && (lower != nums.length - 1)){
				nums[lower] = newVal;
				
				replaceMult5Helper(nums, newVal, lower+1);
			}else if((lower != nums.length -1)){
				replaceMult5Helper(nums, newVal, lower+1);
			}else if((lower == nums.length -1) && nums[lower] % 5 == 0){
				nums[lower] = newVal;
			}
			
		}
		
		
		
		
		
		// part 3
		public static ArrayList<int[]> permuteArray(int[] array) {
		
		
			ArrayList<int[]> result = new ArrayList();
			permutations(array, new int[]{}, result);
		
		}
		
		public static void permutations(int[] x, int[] y, ArrayList<int[]> result){
			if(x.length == 0){
				result.add(y);
				return;
				
			}
			
			for(int i = 0; i < x.length; i++){
				int[] x2 = new int[x.length - 1];
				if(i >0){
					System.arraycopy(x, 0, x2, 0, i);
				}
				if(i < x.length -1){
					System.arraycopy(x, i + 1, x2, i,x.length - i - 1);
				}
				
				int[] y2 = new int[y.length + 1];
				System.arraycopy(y, 0, y2, 0, y.length);
				y2[y.length] = x[i];
				permutations(x2,y2,result);
				
				
			
			}
			
			
		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		// part 4
		public static String[] mobius(String s1, String s2) {
			// fill this in
			return null;
		}

		// part 5
		public static int teddy(int initial, int goal, int increment) {
			// fill this in
			return -2;
		}
}
